/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.170.23604-b59b123004e9
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTDocumentInfo struct for BTDocumentInfo
type BTDocumentInfo struct {
	CanMove     *bool                   `json:"canMove,omitempty"`
	CreatedAt   *JSONTime               `json:"createdAt,omitempty"`
	CreatedBy   *BTUserBasicSummaryInfo `json:"createdBy,omitempty"`
	Description *string                 `json:"description,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id                *string                 `json:"id,omitempty"`
	IsContainer       *bool                   `json:"isContainer,omitempty"`
	IsEnterpriseOwned *bool                   `json:"isEnterpriseOwned,omitempty"`
	IsMutable         *bool                   `json:"isMutable,omitempty"`
	JsonType          string                  `json:"jsonType"`
	ModifiedAt        *JSONTime               `json:"modifiedAt,omitempty"`
	ModifiedBy        *BTUserBasicSummaryInfo `json:"modifiedBy,omitempty"`
	// Name of the resource.
	Name         *string      `json:"name,omitempty"`
	Owner        *BTOwnerInfo `json:"owner,omitempty"`
	ProjectId    *string      `json:"projectId,omitempty"`
	ResourceType *string      `json:"resourceType,omitempty"`
	TreeHref     *string      `json:"treeHref,omitempty"`
	UnparentHref *string      `json:"unparentHref,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                           *string               `json:"viewRef,omitempty"`
	AnonymousAccessAllowed            *bool                 `json:"anonymousAccessAllowed,omitempty"`
	AnonymousAllowsExport             *bool                 `json:"anonymousAllowsExport,omitempty"`
	CanUnshare                        *bool                 `json:"canUnshare,omitempty"`
	CreatedWithEducationPlan          *bool                 `json:"createdWithEducationPlan,omitempty"`
	DefaultElementId                  *string               `json:"defaultElementId,omitempty"`
	DefaultWorkspace                  *BTWorkspaceInfo      `json:"defaultWorkspace,omitempty"`
	DocumentLabels                    []BTDocumentLabelInfo `json:"documentLabels,omitempty"`
	DocumentType                      *int32                `json:"documentType,omitempty"`
	ForceExportRules                  *bool                 `json:"forceExportRules,omitempty"`
	HasReleaseRevisionableObjects     *bool                 `json:"hasReleaseRevisionableObjects,omitempty"`
	HasRelevantInsertables            *bool                 `json:"hasRelevantInsertables,omitempty"`
	IsOrphaned                        *bool                 `json:"isOrphaned,omitempty"`
	IsUsingManagedWorkflow            *bool                 `json:"isUsingManagedWorkflow,omitempty"`
	LikedByCurrentUser                *bool                 `json:"likedByCurrentUser,omitempty"`
	Likes                             *int64                `json:"likes,omitempty"`
	NotRevisionManaged                *bool                 `json:"notRevisionManaged,omitempty"`
	Notes                             *string               `json:"notes,omitempty"`
	NumberOfTimesCopied               *int64                `json:"numberOfTimesCopied,omitempty"`
	NumberOfTimesReferenced           *int64                `json:"numberOfTimesReferenced,omitempty"`
	ParentId                          *string               `json:"parentId,omitempty"`
	Permission                        *BTOldPermission      `json:"permission,omitempty"`
	PermissionSet                     []string              `json:"permissionSet,omitempty"`
	Public                            *bool                 `json:"public,omitempty"`
	PublishedVersionId                *string               `json:"publishedVersionId,omitempty"`
	RecentVersion                     *BTBaseInfo           `json:"recentVersion,omitempty"`
	Sequence                          *string               `json:"sequence,omitempty"`
	SupportTeamUserAndShared          *bool                 `json:"supportTeamUserAndShared,omitempty"`
	Tags                              []string              `json:"tags,omitempty"`
	Thumbnail                         *BTThumbnailInfo      `json:"thumbnail,omitempty"`
	TotalWorkspacesScheduledForUpdate *int32                `json:"totalWorkspacesScheduledForUpdate,omitempty"`
	TotalWorkspacesUpdating           *int32                `json:"totalWorkspacesUpdating,omitempty"`
	Trash                             *bool                 `json:"trash,omitempty"`
	TrashedAt                         *JSONTime             `json:"trashedAt,omitempty"`
	UserAccountLimitsBreached         *bool                 `json:"userAccountLimitsBreached,omitempty"`
	DocumentThumbnailElementId        *string               `json:"documentThumbnailElementId,omitempty"`
	DuplicateNameViolationError       *string               `json:"duplicateNameViolationError,omitempty"`
	IsUpgradedToLatestVersion         *bool                 `json:"isUpgradedToLatestVersion,omitempty"`
	TracingEnabled                    *bool                 `json:"tracingEnabled,omitempty"`
}

// NewBTDocumentInfo instantiates a new BTDocumentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDocumentInfo(jsonType string) *BTDocumentInfo {
	this := BTDocumentInfo{}
	this.JsonType = jsonType
	return &this
}

// NewBTDocumentInfoWithDefaults instantiates a new BTDocumentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDocumentInfoWithDefaults() *BTDocumentInfo {
	this := BTDocumentInfo{}
	return &this
}

// GetCanMove returns the CanMove field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetCanMove() bool {
	if o == nil || o.CanMove == nil {
		var ret bool
		return ret
	}
	return *o.CanMove
}

// GetCanMoveOk returns a tuple with the CanMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetCanMoveOk() (*bool, bool) {
	if o == nil || o.CanMove == nil {
		return nil, false
	}
	return o.CanMove, true
}

// HasCanMove returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasCanMove() bool {
	if o != nil && o.CanMove != nil {
		return true
	}

	return false
}

// SetCanMove gets a reference to the given bool and assigns it to the CanMove field.
func (o *BTDocumentInfo) SetCanMove(v bool) {
	o.CanMove = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTDocumentInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetCreatedBy() BTUserBasicSummaryInfo {
	if o == nil || o.CreatedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetCreatedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the CreatedBy field.
func (o *BTDocumentInfo) SetCreatedBy(v BTUserBasicSummaryInfo) {
	o.CreatedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTDocumentInfo) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTDocumentInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTDocumentInfo) SetId(v string) {
	o.Id = &v
}

// GetIsContainer returns the IsContainer field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsContainer() bool {
	if o == nil || o.IsContainer == nil {
		var ret bool
		return ret
	}
	return *o.IsContainer
}

// GetIsContainerOk returns a tuple with the IsContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsContainerOk() (*bool, bool) {
	if o == nil || o.IsContainer == nil {
		return nil, false
	}
	return o.IsContainer, true
}

// HasIsContainer returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsContainer() bool {
	if o != nil && o.IsContainer != nil {
		return true
	}

	return false
}

// SetIsContainer gets a reference to the given bool and assigns it to the IsContainer field.
func (o *BTDocumentInfo) SetIsContainer(v bool) {
	o.IsContainer = &v
}

// GetIsEnterpriseOwned returns the IsEnterpriseOwned field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsEnterpriseOwned() bool {
	if o == nil || o.IsEnterpriseOwned == nil {
		var ret bool
		return ret
	}
	return *o.IsEnterpriseOwned
}

// GetIsEnterpriseOwnedOk returns a tuple with the IsEnterpriseOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsEnterpriseOwnedOk() (*bool, bool) {
	if o == nil || o.IsEnterpriseOwned == nil {
		return nil, false
	}
	return o.IsEnterpriseOwned, true
}

// HasIsEnterpriseOwned returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsEnterpriseOwned() bool {
	if o != nil && o.IsEnterpriseOwned != nil {
		return true
	}

	return false
}

// SetIsEnterpriseOwned gets a reference to the given bool and assigns it to the IsEnterpriseOwned field.
func (o *BTDocumentInfo) SetIsEnterpriseOwned(v bool) {
	o.IsEnterpriseOwned = &v
}

// GetIsMutable returns the IsMutable field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsMutable() bool {
	if o == nil || o.IsMutable == nil {
		var ret bool
		return ret
	}
	return *o.IsMutable
}

// GetIsMutableOk returns a tuple with the IsMutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsMutableOk() (*bool, bool) {
	if o == nil || o.IsMutable == nil {
		return nil, false
	}
	return o.IsMutable, true
}

// HasIsMutable returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsMutable() bool {
	if o != nil && o.IsMutable != nil {
		return true
	}

	return false
}

// SetIsMutable gets a reference to the given bool and assigns it to the IsMutable field.
func (o *BTDocumentInfo) SetIsMutable(v bool) {
	o.IsMutable = &v
}

// GetJsonType returns the JsonType field value
func (o *BTDocumentInfo) GetJsonType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonType, true
}

// SetJsonType sets field value
func (o *BTDocumentInfo) SetJsonType(v string) {
	o.JsonType = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetModifiedAt() JSONTime {
	if o == nil || o.ModifiedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetModifiedAtOk() (*JSONTime, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given JSONTime and assigns it to the ModifiedAt field.
func (o *BTDocumentInfo) SetModifiedAt(v JSONTime) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetModifiedBy() BTUserBasicSummaryInfo {
	if o == nil || o.ModifiedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetModifiedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the ModifiedBy field.
func (o *BTDocumentInfo) SetModifiedBy(v BTUserBasicSummaryInfo) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTDocumentInfo) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetOwner() BTOwnerInfo {
	if o == nil || o.Owner == nil {
		var ret BTOwnerInfo
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetOwnerOk() (*BTOwnerInfo, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given BTOwnerInfo and assigns it to the Owner field.
func (o *BTDocumentInfo) SetOwner(v BTOwnerInfo) {
	o.Owner = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *BTDocumentInfo) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *BTDocumentInfo) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetTreeHref returns the TreeHref field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTreeHref() string {
	if o == nil || o.TreeHref == nil {
		var ret string
		return ret
	}
	return *o.TreeHref
}

// GetTreeHrefOk returns a tuple with the TreeHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTreeHrefOk() (*string, bool) {
	if o == nil || o.TreeHref == nil {
		return nil, false
	}
	return o.TreeHref, true
}

// HasTreeHref returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTreeHref() bool {
	if o != nil && o.TreeHref != nil {
		return true
	}

	return false
}

// SetTreeHref gets a reference to the given string and assigns it to the TreeHref field.
func (o *BTDocumentInfo) SetTreeHref(v string) {
	o.TreeHref = &v
}

// GetUnparentHref returns the UnparentHref field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetUnparentHref() string {
	if o == nil || o.UnparentHref == nil {
		var ret string
		return ret
	}
	return *o.UnparentHref
}

// GetUnparentHrefOk returns a tuple with the UnparentHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetUnparentHrefOk() (*string, bool) {
	if o == nil || o.UnparentHref == nil {
		return nil, false
	}
	return o.UnparentHref, true
}

// HasUnparentHref returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasUnparentHref() bool {
	if o != nil && o.UnparentHref != nil {
		return true
	}

	return false
}

// SetUnparentHref gets a reference to the given string and assigns it to the UnparentHref field.
func (o *BTDocumentInfo) SetUnparentHref(v string) {
	o.UnparentHref = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTDocumentInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetAnonymousAccessAllowed returns the AnonymousAccessAllowed field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetAnonymousAccessAllowed() bool {
	if o == nil || o.AnonymousAccessAllowed == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAccessAllowed
}

// GetAnonymousAccessAllowedOk returns a tuple with the AnonymousAccessAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetAnonymousAccessAllowedOk() (*bool, bool) {
	if o == nil || o.AnonymousAccessAllowed == nil {
		return nil, false
	}
	return o.AnonymousAccessAllowed, true
}

// HasAnonymousAccessAllowed returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasAnonymousAccessAllowed() bool {
	if o != nil && o.AnonymousAccessAllowed != nil {
		return true
	}

	return false
}

// SetAnonymousAccessAllowed gets a reference to the given bool and assigns it to the AnonymousAccessAllowed field.
func (o *BTDocumentInfo) SetAnonymousAccessAllowed(v bool) {
	o.AnonymousAccessAllowed = &v
}

// GetAnonymousAllowsExport returns the AnonymousAllowsExport field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetAnonymousAllowsExport() bool {
	if o == nil || o.AnonymousAllowsExport == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAllowsExport
}

// GetAnonymousAllowsExportOk returns a tuple with the AnonymousAllowsExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetAnonymousAllowsExportOk() (*bool, bool) {
	if o == nil || o.AnonymousAllowsExport == nil {
		return nil, false
	}
	return o.AnonymousAllowsExport, true
}

// HasAnonymousAllowsExport returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasAnonymousAllowsExport() bool {
	if o != nil && o.AnonymousAllowsExport != nil {
		return true
	}

	return false
}

// SetAnonymousAllowsExport gets a reference to the given bool and assigns it to the AnonymousAllowsExport field.
func (o *BTDocumentInfo) SetAnonymousAllowsExport(v bool) {
	o.AnonymousAllowsExport = &v
}

// GetCanUnshare returns the CanUnshare field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetCanUnshare() bool {
	if o == nil || o.CanUnshare == nil {
		var ret bool
		return ret
	}
	return *o.CanUnshare
}

// GetCanUnshareOk returns a tuple with the CanUnshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetCanUnshareOk() (*bool, bool) {
	if o == nil || o.CanUnshare == nil {
		return nil, false
	}
	return o.CanUnshare, true
}

// HasCanUnshare returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasCanUnshare() bool {
	if o != nil && o.CanUnshare != nil {
		return true
	}

	return false
}

// SetCanUnshare gets a reference to the given bool and assigns it to the CanUnshare field.
func (o *BTDocumentInfo) SetCanUnshare(v bool) {
	o.CanUnshare = &v
}

// GetCreatedWithEducationPlan returns the CreatedWithEducationPlan field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetCreatedWithEducationPlan() bool {
	if o == nil || o.CreatedWithEducationPlan == nil {
		var ret bool
		return ret
	}
	return *o.CreatedWithEducationPlan
}

// GetCreatedWithEducationPlanOk returns a tuple with the CreatedWithEducationPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetCreatedWithEducationPlanOk() (*bool, bool) {
	if o == nil || o.CreatedWithEducationPlan == nil {
		return nil, false
	}
	return o.CreatedWithEducationPlan, true
}

// HasCreatedWithEducationPlan returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasCreatedWithEducationPlan() bool {
	if o != nil && o.CreatedWithEducationPlan != nil {
		return true
	}

	return false
}

// SetCreatedWithEducationPlan gets a reference to the given bool and assigns it to the CreatedWithEducationPlan field.
func (o *BTDocumentInfo) SetCreatedWithEducationPlan(v bool) {
	o.CreatedWithEducationPlan = &v
}

// GetDefaultElementId returns the DefaultElementId field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDefaultElementId() string {
	if o == nil || o.DefaultElementId == nil {
		var ret string
		return ret
	}
	return *o.DefaultElementId
}

// GetDefaultElementIdOk returns a tuple with the DefaultElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDefaultElementIdOk() (*string, bool) {
	if o == nil || o.DefaultElementId == nil {
		return nil, false
	}
	return o.DefaultElementId, true
}

// HasDefaultElementId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDefaultElementId() bool {
	if o != nil && o.DefaultElementId != nil {
		return true
	}

	return false
}

// SetDefaultElementId gets a reference to the given string and assigns it to the DefaultElementId field.
func (o *BTDocumentInfo) SetDefaultElementId(v string) {
	o.DefaultElementId = &v
}

// GetDefaultWorkspace returns the DefaultWorkspace field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDefaultWorkspace() BTWorkspaceInfo {
	if o == nil || o.DefaultWorkspace == nil {
		var ret BTWorkspaceInfo
		return ret
	}
	return *o.DefaultWorkspace
}

// GetDefaultWorkspaceOk returns a tuple with the DefaultWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDefaultWorkspaceOk() (*BTWorkspaceInfo, bool) {
	if o == nil || o.DefaultWorkspace == nil {
		return nil, false
	}
	return o.DefaultWorkspace, true
}

// HasDefaultWorkspace returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDefaultWorkspace() bool {
	if o != nil && o.DefaultWorkspace != nil {
		return true
	}

	return false
}

// SetDefaultWorkspace gets a reference to the given BTWorkspaceInfo and assigns it to the DefaultWorkspace field.
func (o *BTDocumentInfo) SetDefaultWorkspace(v BTWorkspaceInfo) {
	o.DefaultWorkspace = &v
}

// GetDocumentLabels returns the DocumentLabels field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDocumentLabels() []BTDocumentLabelInfo {
	if o == nil || o.DocumentLabels == nil {
		var ret []BTDocumentLabelInfo
		return ret
	}
	return o.DocumentLabels
}

// GetDocumentLabelsOk returns a tuple with the DocumentLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDocumentLabelsOk() ([]BTDocumentLabelInfo, bool) {
	if o == nil || o.DocumentLabels == nil {
		return nil, false
	}
	return o.DocumentLabels, true
}

// HasDocumentLabels returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDocumentLabels() bool {
	if o != nil && o.DocumentLabels != nil {
		return true
	}

	return false
}

// SetDocumentLabels gets a reference to the given []BTDocumentLabelInfo and assigns it to the DocumentLabels field.
func (o *BTDocumentInfo) SetDocumentLabels(v []BTDocumentLabelInfo) {
	o.DocumentLabels = v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDocumentType() int32 {
	if o == nil || o.DocumentType == nil {
		var ret int32
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDocumentTypeOk() (*int32, bool) {
	if o == nil || o.DocumentType == nil {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDocumentType() bool {
	if o != nil && o.DocumentType != nil {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given int32 and assigns it to the DocumentType field.
func (o *BTDocumentInfo) SetDocumentType(v int32) {
	o.DocumentType = &v
}

// GetForceExportRules returns the ForceExportRules field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetForceExportRules() bool {
	if o == nil || o.ForceExportRules == nil {
		var ret bool
		return ret
	}
	return *o.ForceExportRules
}

// GetForceExportRulesOk returns a tuple with the ForceExportRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetForceExportRulesOk() (*bool, bool) {
	if o == nil || o.ForceExportRules == nil {
		return nil, false
	}
	return o.ForceExportRules, true
}

// HasForceExportRules returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasForceExportRules() bool {
	if o != nil && o.ForceExportRules != nil {
		return true
	}

	return false
}

// SetForceExportRules gets a reference to the given bool and assigns it to the ForceExportRules field.
func (o *BTDocumentInfo) SetForceExportRules(v bool) {
	o.ForceExportRules = &v
}

// GetHasReleaseRevisionableObjects returns the HasReleaseRevisionableObjects field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetHasReleaseRevisionableObjects() bool {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		var ret bool
		return ret
	}
	return *o.HasReleaseRevisionableObjects
}

// GetHasReleaseRevisionableObjectsOk returns a tuple with the HasReleaseRevisionableObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetHasReleaseRevisionableObjectsOk() (*bool, bool) {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		return nil, false
	}
	return o.HasReleaseRevisionableObjects, true
}

// HasHasReleaseRevisionableObjects returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasHasReleaseRevisionableObjects() bool {
	if o != nil && o.HasReleaseRevisionableObjects != nil {
		return true
	}

	return false
}

// SetHasReleaseRevisionableObjects gets a reference to the given bool and assigns it to the HasReleaseRevisionableObjects field.
func (o *BTDocumentInfo) SetHasReleaseRevisionableObjects(v bool) {
	o.HasReleaseRevisionableObjects = &v
}

// GetHasRelevantInsertables returns the HasRelevantInsertables field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetHasRelevantInsertables() bool {
	if o == nil || o.HasRelevantInsertables == nil {
		var ret bool
		return ret
	}
	return *o.HasRelevantInsertables
}

// GetHasRelevantInsertablesOk returns a tuple with the HasRelevantInsertables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetHasRelevantInsertablesOk() (*bool, bool) {
	if o == nil || o.HasRelevantInsertables == nil {
		return nil, false
	}
	return o.HasRelevantInsertables, true
}

// HasHasRelevantInsertables returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasHasRelevantInsertables() bool {
	if o != nil && o.HasRelevantInsertables != nil {
		return true
	}

	return false
}

// SetHasRelevantInsertables gets a reference to the given bool and assigns it to the HasRelevantInsertables field.
func (o *BTDocumentInfo) SetHasRelevantInsertables(v bool) {
	o.HasRelevantInsertables = &v
}

// GetIsOrphaned returns the IsOrphaned field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsOrphaned() bool {
	if o == nil || o.IsOrphaned == nil {
		var ret bool
		return ret
	}
	return *o.IsOrphaned
}

// GetIsOrphanedOk returns a tuple with the IsOrphaned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsOrphanedOk() (*bool, bool) {
	if o == nil || o.IsOrphaned == nil {
		return nil, false
	}
	return o.IsOrphaned, true
}

// HasIsOrphaned returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsOrphaned() bool {
	if o != nil && o.IsOrphaned != nil {
		return true
	}

	return false
}

// SetIsOrphaned gets a reference to the given bool and assigns it to the IsOrphaned field.
func (o *BTDocumentInfo) SetIsOrphaned(v bool) {
	o.IsOrphaned = &v
}

// GetIsUsingManagedWorkflow returns the IsUsingManagedWorkflow field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsUsingManagedWorkflow() bool {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		var ret bool
		return ret
	}
	return *o.IsUsingManagedWorkflow
}

// GetIsUsingManagedWorkflowOk returns a tuple with the IsUsingManagedWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsUsingManagedWorkflowOk() (*bool, bool) {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		return nil, false
	}
	return o.IsUsingManagedWorkflow, true
}

// HasIsUsingManagedWorkflow returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsUsingManagedWorkflow() bool {
	if o != nil && o.IsUsingManagedWorkflow != nil {
		return true
	}

	return false
}

// SetIsUsingManagedWorkflow gets a reference to the given bool and assigns it to the IsUsingManagedWorkflow field.
func (o *BTDocumentInfo) SetIsUsingManagedWorkflow(v bool) {
	o.IsUsingManagedWorkflow = &v
}

// GetLikedByCurrentUser returns the LikedByCurrentUser field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetLikedByCurrentUser() bool {
	if o == nil || o.LikedByCurrentUser == nil {
		var ret bool
		return ret
	}
	return *o.LikedByCurrentUser
}

// GetLikedByCurrentUserOk returns a tuple with the LikedByCurrentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetLikedByCurrentUserOk() (*bool, bool) {
	if o == nil || o.LikedByCurrentUser == nil {
		return nil, false
	}
	return o.LikedByCurrentUser, true
}

// HasLikedByCurrentUser returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasLikedByCurrentUser() bool {
	if o != nil && o.LikedByCurrentUser != nil {
		return true
	}

	return false
}

// SetLikedByCurrentUser gets a reference to the given bool and assigns it to the LikedByCurrentUser field.
func (o *BTDocumentInfo) SetLikedByCurrentUser(v bool) {
	o.LikedByCurrentUser = &v
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetLikes() int64 {
	if o == nil || o.Likes == nil {
		var ret int64
		return ret
	}
	return *o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetLikesOk() (*int64, bool) {
	if o == nil || o.Likes == nil {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasLikes() bool {
	if o != nil && o.Likes != nil {
		return true
	}

	return false
}

// SetLikes gets a reference to the given int64 and assigns it to the Likes field.
func (o *BTDocumentInfo) SetLikes(v int64) {
	o.Likes = &v
}

// GetNotRevisionManaged returns the NotRevisionManaged field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetNotRevisionManaged() bool {
	if o == nil || o.NotRevisionManaged == nil {
		var ret bool
		return ret
	}
	return *o.NotRevisionManaged
}

// GetNotRevisionManagedOk returns a tuple with the NotRevisionManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetNotRevisionManagedOk() (*bool, bool) {
	if o == nil || o.NotRevisionManaged == nil {
		return nil, false
	}
	return o.NotRevisionManaged, true
}

// HasNotRevisionManaged returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasNotRevisionManaged() bool {
	if o != nil && o.NotRevisionManaged != nil {
		return true
	}

	return false
}

// SetNotRevisionManaged gets a reference to the given bool and assigns it to the NotRevisionManaged field.
func (o *BTDocumentInfo) SetNotRevisionManaged(v bool) {
	o.NotRevisionManaged = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BTDocumentInfo) SetNotes(v string) {
	o.Notes = &v
}

// GetNumberOfTimesCopied returns the NumberOfTimesCopied field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetNumberOfTimesCopied() int64 {
	if o == nil || o.NumberOfTimesCopied == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesCopied
}

// GetNumberOfTimesCopiedOk returns a tuple with the NumberOfTimesCopied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetNumberOfTimesCopiedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesCopied == nil {
		return nil, false
	}
	return o.NumberOfTimesCopied, true
}

// HasNumberOfTimesCopied returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasNumberOfTimesCopied() bool {
	if o != nil && o.NumberOfTimesCopied != nil {
		return true
	}

	return false
}

// SetNumberOfTimesCopied gets a reference to the given int64 and assigns it to the NumberOfTimesCopied field.
func (o *BTDocumentInfo) SetNumberOfTimesCopied(v int64) {
	o.NumberOfTimesCopied = &v
}

// GetNumberOfTimesReferenced returns the NumberOfTimesReferenced field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetNumberOfTimesReferenced() int64 {
	if o == nil || o.NumberOfTimesReferenced == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesReferenced
}

// GetNumberOfTimesReferencedOk returns a tuple with the NumberOfTimesReferenced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetNumberOfTimesReferencedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesReferenced == nil {
		return nil, false
	}
	return o.NumberOfTimesReferenced, true
}

// HasNumberOfTimesReferenced returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasNumberOfTimesReferenced() bool {
	if o != nil && o.NumberOfTimesReferenced != nil {
		return true
	}

	return false
}

// SetNumberOfTimesReferenced gets a reference to the given int64 and assigns it to the NumberOfTimesReferenced field.
func (o *BTDocumentInfo) SetNumberOfTimesReferenced(v int64) {
	o.NumberOfTimesReferenced = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTDocumentInfo) SetParentId(v string) {
	o.ParentId = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetPermission() BTOldPermission {
	if o == nil || o.Permission == nil {
		var ret BTOldPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetPermissionOk() (*BTOldPermission, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given BTOldPermission and assigns it to the Permission field.
func (o *BTDocumentInfo) SetPermission(v BTOldPermission) {
	o.Permission = &v
}

// GetPermissionSet returns the PermissionSet field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetPermissionSet() []string {
	if o == nil || o.PermissionSet == nil {
		var ret []string
		return ret
	}
	return o.PermissionSet
}

// GetPermissionSetOk returns a tuple with the PermissionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetPermissionSetOk() ([]string, bool) {
	if o == nil || o.PermissionSet == nil {
		return nil, false
	}
	return o.PermissionSet, true
}

// HasPermissionSet returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasPermissionSet() bool {
	if o != nil && o.PermissionSet != nil {
		return true
	}

	return false
}

// SetPermissionSet gets a reference to the given []string and assigns it to the PermissionSet field.
func (o *BTDocumentInfo) SetPermissionSet(v []string) {
	o.PermissionSet = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *BTDocumentInfo) SetPublic(v bool) {
	o.Public = &v
}

// GetPublishedVersionId returns the PublishedVersionId field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetPublishedVersionId() string {
	if o == nil || o.PublishedVersionId == nil {
		var ret string
		return ret
	}
	return *o.PublishedVersionId
}

// GetPublishedVersionIdOk returns a tuple with the PublishedVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetPublishedVersionIdOk() (*string, bool) {
	if o == nil || o.PublishedVersionId == nil {
		return nil, false
	}
	return o.PublishedVersionId, true
}

// HasPublishedVersionId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasPublishedVersionId() bool {
	if o != nil && o.PublishedVersionId != nil {
		return true
	}

	return false
}

// SetPublishedVersionId gets a reference to the given string and assigns it to the PublishedVersionId field.
func (o *BTDocumentInfo) SetPublishedVersionId(v string) {
	o.PublishedVersionId = &v
}

// GetRecentVersion returns the RecentVersion field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetRecentVersion() BTBaseInfo {
	if o == nil || o.RecentVersion == nil {
		var ret BTBaseInfo
		return ret
	}
	return *o.RecentVersion
}

// GetRecentVersionOk returns a tuple with the RecentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetRecentVersionOk() (*BTBaseInfo, bool) {
	if o == nil || o.RecentVersion == nil {
		return nil, false
	}
	return o.RecentVersion, true
}

// HasRecentVersion returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasRecentVersion() bool {
	if o != nil && o.RecentVersion != nil {
		return true
	}

	return false
}

// SetRecentVersion gets a reference to the given BTBaseInfo and assigns it to the RecentVersion field.
func (o *BTDocumentInfo) SetRecentVersion(v BTBaseInfo) {
	o.RecentVersion = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetSequence() string {
	if o == nil || o.Sequence == nil {
		var ret string
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetSequenceOk() (*string, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given string and assigns it to the Sequence field.
func (o *BTDocumentInfo) SetSequence(v string) {
	o.Sequence = &v
}

// GetSupportTeamUserAndShared returns the SupportTeamUserAndShared field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetSupportTeamUserAndShared() bool {
	if o == nil || o.SupportTeamUserAndShared == nil {
		var ret bool
		return ret
	}
	return *o.SupportTeamUserAndShared
}

// GetSupportTeamUserAndSharedOk returns a tuple with the SupportTeamUserAndShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetSupportTeamUserAndSharedOk() (*bool, bool) {
	if o == nil || o.SupportTeamUserAndShared == nil {
		return nil, false
	}
	return o.SupportTeamUserAndShared, true
}

// HasSupportTeamUserAndShared returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasSupportTeamUserAndShared() bool {
	if o != nil && o.SupportTeamUserAndShared != nil {
		return true
	}

	return false
}

// SetSupportTeamUserAndShared gets a reference to the given bool and assigns it to the SupportTeamUserAndShared field.
func (o *BTDocumentInfo) SetSupportTeamUserAndShared(v bool) {
	o.SupportTeamUserAndShared = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BTDocumentInfo) SetTags(v []string) {
	o.Tags = v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetThumbnail() BTThumbnailInfo {
	if o == nil || o.Thumbnail == nil {
		var ret BTThumbnailInfo
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetThumbnailOk() (*BTThumbnailInfo, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given BTThumbnailInfo and assigns it to the Thumbnail field.
func (o *BTDocumentInfo) SetThumbnail(v BTThumbnailInfo) {
	o.Thumbnail = &v
}

// GetTotalWorkspacesScheduledForUpdate returns the TotalWorkspacesScheduledForUpdate field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTotalWorkspacesScheduledForUpdate() int32 {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesScheduledForUpdate
}

// GetTotalWorkspacesScheduledForUpdateOk returns a tuple with the TotalWorkspacesScheduledForUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTotalWorkspacesScheduledForUpdateOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		return nil, false
	}
	return o.TotalWorkspacesScheduledForUpdate, true
}

// HasTotalWorkspacesScheduledForUpdate returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTotalWorkspacesScheduledForUpdate() bool {
	if o != nil && o.TotalWorkspacesScheduledForUpdate != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesScheduledForUpdate gets a reference to the given int32 and assigns it to the TotalWorkspacesScheduledForUpdate field.
func (o *BTDocumentInfo) SetTotalWorkspacesScheduledForUpdate(v int32) {
	o.TotalWorkspacesScheduledForUpdate = &v
}

// GetTotalWorkspacesUpdating returns the TotalWorkspacesUpdating field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTotalWorkspacesUpdating() int32 {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesUpdating
}

// GetTotalWorkspacesUpdatingOk returns a tuple with the TotalWorkspacesUpdating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTotalWorkspacesUpdatingOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		return nil, false
	}
	return o.TotalWorkspacesUpdating, true
}

// HasTotalWorkspacesUpdating returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTotalWorkspacesUpdating() bool {
	if o != nil && o.TotalWorkspacesUpdating != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesUpdating gets a reference to the given int32 and assigns it to the TotalWorkspacesUpdating field.
func (o *BTDocumentInfo) SetTotalWorkspacesUpdating(v int32) {
	o.TotalWorkspacesUpdating = &v
}

// GetTrash returns the Trash field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTrash() bool {
	if o == nil || o.Trash == nil {
		var ret bool
		return ret
	}
	return *o.Trash
}

// GetTrashOk returns a tuple with the Trash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTrashOk() (*bool, bool) {
	if o == nil || o.Trash == nil {
		return nil, false
	}
	return o.Trash, true
}

// HasTrash returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTrash() bool {
	if o != nil && o.Trash != nil {
		return true
	}

	return false
}

// SetTrash gets a reference to the given bool and assigns it to the Trash field.
func (o *BTDocumentInfo) SetTrash(v bool) {
	o.Trash = &v
}

// GetTrashedAt returns the TrashedAt field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTrashedAt() JSONTime {
	if o == nil || o.TrashedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.TrashedAt
}

// GetTrashedAtOk returns a tuple with the TrashedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTrashedAtOk() (*JSONTime, bool) {
	if o == nil || o.TrashedAt == nil {
		return nil, false
	}
	return o.TrashedAt, true
}

// HasTrashedAt returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTrashedAt() bool {
	if o != nil && o.TrashedAt != nil {
		return true
	}

	return false
}

// SetTrashedAt gets a reference to the given JSONTime and assigns it to the TrashedAt field.
func (o *BTDocumentInfo) SetTrashedAt(v JSONTime) {
	o.TrashedAt = &v
}

// GetUserAccountLimitsBreached returns the UserAccountLimitsBreached field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetUserAccountLimitsBreached() bool {
	if o == nil || o.UserAccountLimitsBreached == nil {
		var ret bool
		return ret
	}
	return *o.UserAccountLimitsBreached
}

// GetUserAccountLimitsBreachedOk returns a tuple with the UserAccountLimitsBreached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetUserAccountLimitsBreachedOk() (*bool, bool) {
	if o == nil || o.UserAccountLimitsBreached == nil {
		return nil, false
	}
	return o.UserAccountLimitsBreached, true
}

// HasUserAccountLimitsBreached returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasUserAccountLimitsBreached() bool {
	if o != nil && o.UserAccountLimitsBreached != nil {
		return true
	}

	return false
}

// SetUserAccountLimitsBreached gets a reference to the given bool and assigns it to the UserAccountLimitsBreached field.
func (o *BTDocumentInfo) SetUserAccountLimitsBreached(v bool) {
	o.UserAccountLimitsBreached = &v
}

// GetDocumentThumbnailElementId returns the DocumentThumbnailElementId field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDocumentThumbnailElementId() string {
	if o == nil || o.DocumentThumbnailElementId == nil {
		var ret string
		return ret
	}
	return *o.DocumentThumbnailElementId
}

// GetDocumentThumbnailElementIdOk returns a tuple with the DocumentThumbnailElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDocumentThumbnailElementIdOk() (*string, bool) {
	if o == nil || o.DocumentThumbnailElementId == nil {
		return nil, false
	}
	return o.DocumentThumbnailElementId, true
}

// HasDocumentThumbnailElementId returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDocumentThumbnailElementId() bool {
	if o != nil && o.DocumentThumbnailElementId != nil {
		return true
	}

	return false
}

// SetDocumentThumbnailElementId gets a reference to the given string and assigns it to the DocumentThumbnailElementId field.
func (o *BTDocumentInfo) SetDocumentThumbnailElementId(v string) {
	o.DocumentThumbnailElementId = &v
}

// GetDuplicateNameViolationError returns the DuplicateNameViolationError field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetDuplicateNameViolationError() string {
	if o == nil || o.DuplicateNameViolationError == nil {
		var ret string
		return ret
	}
	return *o.DuplicateNameViolationError
}

// GetDuplicateNameViolationErrorOk returns a tuple with the DuplicateNameViolationError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetDuplicateNameViolationErrorOk() (*string, bool) {
	if o == nil || o.DuplicateNameViolationError == nil {
		return nil, false
	}
	return o.DuplicateNameViolationError, true
}

// HasDuplicateNameViolationError returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasDuplicateNameViolationError() bool {
	if o != nil && o.DuplicateNameViolationError != nil {
		return true
	}

	return false
}

// SetDuplicateNameViolationError gets a reference to the given string and assigns it to the DuplicateNameViolationError field.
func (o *BTDocumentInfo) SetDuplicateNameViolationError(v string) {
	o.DuplicateNameViolationError = &v
}

// GetIsUpgradedToLatestVersion returns the IsUpgradedToLatestVersion field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetIsUpgradedToLatestVersion() bool {
	if o == nil || o.IsUpgradedToLatestVersion == nil {
		var ret bool
		return ret
	}
	return *o.IsUpgradedToLatestVersion
}

// GetIsUpgradedToLatestVersionOk returns a tuple with the IsUpgradedToLatestVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetIsUpgradedToLatestVersionOk() (*bool, bool) {
	if o == nil || o.IsUpgradedToLatestVersion == nil {
		return nil, false
	}
	return o.IsUpgradedToLatestVersion, true
}

// HasIsUpgradedToLatestVersion returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasIsUpgradedToLatestVersion() bool {
	if o != nil && o.IsUpgradedToLatestVersion != nil {
		return true
	}

	return false
}

// SetIsUpgradedToLatestVersion gets a reference to the given bool and assigns it to the IsUpgradedToLatestVersion field.
func (o *BTDocumentInfo) SetIsUpgradedToLatestVersion(v bool) {
	o.IsUpgradedToLatestVersion = &v
}

// GetTracingEnabled returns the TracingEnabled field value if set, zero value otherwise.
func (o *BTDocumentInfo) GetTracingEnabled() bool {
	if o == nil || o.TracingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TracingEnabled
}

// GetTracingEnabledOk returns a tuple with the TracingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentInfo) GetTracingEnabledOk() (*bool, bool) {
	if o == nil || o.TracingEnabled == nil {
		return nil, false
	}
	return o.TracingEnabled, true
}

// HasTracingEnabled returns a boolean if a field has been set.
func (o *BTDocumentInfo) HasTracingEnabled() bool {
	if o != nil && o.TracingEnabled != nil {
		return true
	}

	return false
}

// SetTracingEnabled gets a reference to the given bool and assigns it to the TracingEnabled field.
func (o *BTDocumentInfo) SetTracingEnabled(v bool) {
	o.TracingEnabled = &v
}

func (o BTDocumentInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanMove != nil {
		toSerialize["canMove"] = o.CanMove
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsContainer != nil {
		toSerialize["isContainer"] = o.IsContainer
	}
	if o.IsEnterpriseOwned != nil {
		toSerialize["isEnterpriseOwned"] = o.IsEnterpriseOwned
	}
	if o.IsMutable != nil {
		toSerialize["isMutable"] = o.IsMutable
	}
	if true {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.TreeHref != nil {
		toSerialize["treeHref"] = o.TreeHref
	}
	if o.UnparentHref != nil {
		toSerialize["unparentHref"] = o.UnparentHref
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.AnonymousAccessAllowed != nil {
		toSerialize["anonymousAccessAllowed"] = o.AnonymousAccessAllowed
	}
	if o.AnonymousAllowsExport != nil {
		toSerialize["anonymousAllowsExport"] = o.AnonymousAllowsExport
	}
	if o.CanUnshare != nil {
		toSerialize["canUnshare"] = o.CanUnshare
	}
	if o.CreatedWithEducationPlan != nil {
		toSerialize["createdWithEducationPlan"] = o.CreatedWithEducationPlan
	}
	if o.DefaultElementId != nil {
		toSerialize["defaultElementId"] = o.DefaultElementId
	}
	if o.DefaultWorkspace != nil {
		toSerialize["defaultWorkspace"] = o.DefaultWorkspace
	}
	if o.DocumentLabels != nil {
		toSerialize["documentLabels"] = o.DocumentLabels
	}
	if o.DocumentType != nil {
		toSerialize["documentType"] = o.DocumentType
	}
	if o.ForceExportRules != nil {
		toSerialize["forceExportRules"] = o.ForceExportRules
	}
	if o.HasReleaseRevisionableObjects != nil {
		toSerialize["hasReleaseRevisionableObjects"] = o.HasReleaseRevisionableObjects
	}
	if o.HasRelevantInsertables != nil {
		toSerialize["hasRelevantInsertables"] = o.HasRelevantInsertables
	}
	if o.IsOrphaned != nil {
		toSerialize["isOrphaned"] = o.IsOrphaned
	}
	if o.IsUsingManagedWorkflow != nil {
		toSerialize["isUsingManagedWorkflow"] = o.IsUsingManagedWorkflow
	}
	if o.LikedByCurrentUser != nil {
		toSerialize["likedByCurrentUser"] = o.LikedByCurrentUser
	}
	if o.Likes != nil {
		toSerialize["likes"] = o.Likes
	}
	if o.NotRevisionManaged != nil {
		toSerialize["notRevisionManaged"] = o.NotRevisionManaged
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.NumberOfTimesCopied != nil {
		toSerialize["numberOfTimesCopied"] = o.NumberOfTimesCopied
	}
	if o.NumberOfTimesReferenced != nil {
		toSerialize["numberOfTimesReferenced"] = o.NumberOfTimesReferenced
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.PermissionSet != nil {
		toSerialize["permissionSet"] = o.PermissionSet
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.PublishedVersionId != nil {
		toSerialize["publishedVersionId"] = o.PublishedVersionId
	}
	if o.RecentVersion != nil {
		toSerialize["recentVersion"] = o.RecentVersion
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	if o.SupportTeamUserAndShared != nil {
		toSerialize["supportTeamUserAndShared"] = o.SupportTeamUserAndShared
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Thumbnail != nil {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.TotalWorkspacesScheduledForUpdate != nil {
		toSerialize["totalWorkspacesScheduledForUpdate"] = o.TotalWorkspacesScheduledForUpdate
	}
	if o.TotalWorkspacesUpdating != nil {
		toSerialize["totalWorkspacesUpdating"] = o.TotalWorkspacesUpdating
	}
	if o.Trash != nil {
		toSerialize["trash"] = o.Trash
	}
	if o.TrashedAt != nil {
		toSerialize["trashedAt"] = o.TrashedAt
	}
	if o.UserAccountLimitsBreached != nil {
		toSerialize["userAccountLimitsBreached"] = o.UserAccountLimitsBreached
	}
	if o.DocumentThumbnailElementId != nil {
		toSerialize["documentThumbnailElementId"] = o.DocumentThumbnailElementId
	}
	if o.DuplicateNameViolationError != nil {
		toSerialize["duplicateNameViolationError"] = o.DuplicateNameViolationError
	}
	if o.IsUpgradedToLatestVersion != nil {
		toSerialize["isUpgradedToLatestVersion"] = o.IsUpgradedToLatestVersion
	}
	if o.TracingEnabled != nil {
		toSerialize["tracingEnabled"] = o.TracingEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableBTDocumentInfo struct {
	value *BTDocumentInfo
	isSet bool
}

func (v NullableBTDocumentInfo) Get() *BTDocumentInfo {
	return v.value
}

func (v *NullableBTDocumentInfo) Set(val *BTDocumentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDocumentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDocumentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDocumentInfo(val *BTDocumentInfo) *NullableBTDocumentInfo {
	return &NullableBTDocumentInfo{value: val, isSet: true}
}

func (v NullableBTDocumentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDocumentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
