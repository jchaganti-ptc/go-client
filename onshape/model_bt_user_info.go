/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.170.23307-4b97c8644a61
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTUserInfo struct for BTUserInfo
type BTUserInfo struct {
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id *string `json:"id,omitempty"`
	// Name of the resource.
	Name *string `json:"name,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                   *string                  `json:"viewRef,omitempty"`
	Image                     *string                  `json:"image,omitempty"`
	State                     *int32                   `json:"state,omitempty"`
	DocumentationName         *string                  `json:"documentationName,omitempty"`
	Email                     *string                  `json:"email,omitempty"`
	FirstName                 *string                  `json:"firstName,omitempty"`
	LastName                  *string                  `json:"lastName,omitempty"`
	Company                   *BTCompanySummaryInfo    `json:"company,omitempty"`
	DocumentationNameOverride *string                  `json:"documentationNameOverride,omitempty"`
	GlobalPermissions         *GlobalPermissionInfo    `json:"globalPermissions,omitempty"`
	IsGuest                   *bool                    `json:"isGuest,omitempty"`
	IsLight                   *bool                    `json:"isLight,omitempty"`
	LastLoginTime             *JSONTime                `json:"lastLoginTime,omitempty"`
	PersonalMessageAllowed    *bool                    `json:"personalMessageAllowed,omitempty"`
	Source                    *int32                   `json:"source,omitempty"`
	ActivePlan                *BTBillingPlanInfo       `json:"activePlan,omitempty"`
	ActivePlanId              *string                  `json:"activePlanId,omitempty"`
	ActivePurchases           []BTPurchaseInfo         `json:"activePurchases,omitempty"`
	ActiveTrialInfo           *BTTrialInfo             `json:"activeTrialInfo,omitempty"`
	B2cId                     *string                  `json:"b2cId,omitempty"`
	BillingUpdateRequired     *bool                    `json:"billingUpdateRequired,omitempty"`
	CadSystemAtSignup         *string                  `json:"cadSystemAtSignup,omitempty"`
	CountryCode               *string                  `json:"countryCode,omitempty"`
	CreatedAt                 *JSONTime                `json:"createdAt,omitempty"`
	Credential                *BTSessionCredentialInfo `json:"credential,omitempty"`
	DefaultCompanyName        *string                  `json:"defaultCompanyName,omitempty"`
	Description               *string                  `json:"description,omitempty"`
	DeviceInfo                *BTDeviceLoginSecretInfo `json:"deviceInfo,omitempty"`
	Enterprise                *bool                    `json:"enterprise,omitempty"`
	EulaId                    *string                  `json:"eulaId,omitempty"`
	EulaRequired              *bool                    `json:"eulaRequired,omitempty"`
	EvalCenter                *bool                    `json:"evalCenter,omitempty"`
	ForumId                   *string                  `json:"forumId,omitempty"`
	LastTrialInfo             *BTTrialInfo             `json:"lastTrialInfo,omitempty"`
	NeedToShowNewWalkthrough  *bool                    `json:"needToShowNewWalkthrough,omitempty"`
	OwnPurchase               *BTPurchaseInfo          `json:"ownPurchase,omitempty"`
	PhoneNumber               *string                  `json:"phoneNumber,omitempty"`
	ProductType               []string                 `json:"productType,omitempty"`
	RedirectUrl               *string                  `json:"redirectUrl,omitempty"`
	Role                      *int32                   `json:"role,omitempty"`
	Roles                     []BTRole                 `json:"roles,omitempty"`
	StartupPage               *int32                   `json:"startupPage,omitempty"`
	SystemUser                *bool                    `json:"systemUser,omitempty"`
	TotpEnabled               *bool                    `json:"totpEnabled,omitempty"`
	TracingEnabled            *bool                    `json:"tracingEnabled,omitempty"`
	TrialInfos                []BTTrialInfo            `json:"trialInfos,omitempty"`
}

// NewBTUserInfo instantiates a new BTUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTUserInfo() *BTUserInfo {
	this := BTUserInfo{}
	return &this
}

// NewBTUserInfoWithDefaults instantiates a new BTUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTUserInfoWithDefaults() *BTUserInfo {
	this := BTUserInfo{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTUserInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTUserInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTUserInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTUserInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTUserInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTUserInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTUserInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTUserInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTUserInfo) SetName(v string) {
	o.Name = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTUserInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTUserInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTUserInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BTUserInfo) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BTUserInfo) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BTUserInfo) SetImage(v string) {
	o.Image = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTUserInfo) GetState() int32 {
	if o == nil || o.State == nil {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetStateOk() (*int32, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BTUserInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *BTUserInfo) SetState(v int32) {
	o.State = &v
}

// GetDocumentationName returns the DocumentationName field value if set, zero value otherwise.
func (o *BTUserInfo) GetDocumentationName() string {
	if o == nil || o.DocumentationName == nil {
		var ret string
		return ret
	}
	return *o.DocumentationName
}

// GetDocumentationNameOk returns a tuple with the DocumentationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDocumentationNameOk() (*string, bool) {
	if o == nil || o.DocumentationName == nil {
		return nil, false
	}
	return o.DocumentationName, true
}

// HasDocumentationName returns a boolean if a field has been set.
func (o *BTUserInfo) HasDocumentationName() bool {
	if o != nil && o.DocumentationName != nil {
		return true
	}

	return false
}

// SetDocumentationName gets a reference to the given string and assigns it to the DocumentationName field.
func (o *BTUserInfo) SetDocumentationName(v string) {
	o.DocumentationName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BTUserInfo) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BTUserInfo) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BTUserInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *BTUserInfo) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *BTUserInfo) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *BTUserInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *BTUserInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *BTUserInfo) GetCompany() BTCompanySummaryInfo {
	if o == nil || o.Company == nil {
		var ret BTCompanySummaryInfo
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCompanyOk() (*BTCompanySummaryInfo, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *BTUserInfo) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given BTCompanySummaryInfo and assigns it to the Company field.
func (o *BTUserInfo) SetCompany(v BTCompanySummaryInfo) {
	o.Company = &v
}

// GetDocumentationNameOverride returns the DocumentationNameOverride field value if set, zero value otherwise.
func (o *BTUserInfo) GetDocumentationNameOverride() string {
	if o == nil || o.DocumentationNameOverride == nil {
		var ret string
		return ret
	}
	return *o.DocumentationNameOverride
}

// GetDocumentationNameOverrideOk returns a tuple with the DocumentationNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDocumentationNameOverrideOk() (*string, bool) {
	if o == nil || o.DocumentationNameOverride == nil {
		return nil, false
	}
	return o.DocumentationNameOverride, true
}

// HasDocumentationNameOverride returns a boolean if a field has been set.
func (o *BTUserInfo) HasDocumentationNameOverride() bool {
	if o != nil && o.DocumentationNameOverride != nil {
		return true
	}

	return false
}

// SetDocumentationNameOverride gets a reference to the given string and assigns it to the DocumentationNameOverride field.
func (o *BTUserInfo) SetDocumentationNameOverride(v string) {
	o.DocumentationNameOverride = &v
}

// GetGlobalPermissions returns the GlobalPermissions field value if set, zero value otherwise.
func (o *BTUserInfo) GetGlobalPermissions() GlobalPermissionInfo {
	if o == nil || o.GlobalPermissions == nil {
		var ret GlobalPermissionInfo
		return ret
	}
	return *o.GlobalPermissions
}

// GetGlobalPermissionsOk returns a tuple with the GlobalPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetGlobalPermissionsOk() (*GlobalPermissionInfo, bool) {
	if o == nil || o.GlobalPermissions == nil {
		return nil, false
	}
	return o.GlobalPermissions, true
}

// HasGlobalPermissions returns a boolean if a field has been set.
func (o *BTUserInfo) HasGlobalPermissions() bool {
	if o != nil && o.GlobalPermissions != nil {
		return true
	}

	return false
}

// SetGlobalPermissions gets a reference to the given GlobalPermissionInfo and assigns it to the GlobalPermissions field.
func (o *BTUserInfo) SetGlobalPermissions(v GlobalPermissionInfo) {
	o.GlobalPermissions = &v
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *BTUserInfo) GetIsGuest() bool {
	if o == nil || o.IsGuest == nil {
		var ret bool
		return ret
	}
	return *o.IsGuest
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIsGuestOk() (*bool, bool) {
	if o == nil || o.IsGuest == nil {
		return nil, false
	}
	return o.IsGuest, true
}

// HasIsGuest returns a boolean if a field has been set.
func (o *BTUserInfo) HasIsGuest() bool {
	if o != nil && o.IsGuest != nil {
		return true
	}

	return false
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *BTUserInfo) SetIsGuest(v bool) {
	o.IsGuest = &v
}

// GetIsLight returns the IsLight field value if set, zero value otherwise.
func (o *BTUserInfo) GetIsLight() bool {
	if o == nil || o.IsLight == nil {
		var ret bool
		return ret
	}
	return *o.IsLight
}

// GetIsLightOk returns a tuple with the IsLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIsLightOk() (*bool, bool) {
	if o == nil || o.IsLight == nil {
		return nil, false
	}
	return o.IsLight, true
}

// HasIsLight returns a boolean if a field has been set.
func (o *BTUserInfo) HasIsLight() bool {
	if o != nil && o.IsLight != nil {
		return true
	}

	return false
}

// SetIsLight gets a reference to the given bool and assigns it to the IsLight field.
func (o *BTUserInfo) SetIsLight(v bool) {
	o.IsLight = &v
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastLoginTime() JSONTime {
	if o == nil || o.LastLoginTime == nil {
		var ret JSONTime
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastLoginTimeOk() (*JSONTime, bool) {
	if o == nil || o.LastLoginTime == nil {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastLoginTime() bool {
	if o != nil && o.LastLoginTime != nil {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given JSONTime and assigns it to the LastLoginTime field.
func (o *BTUserInfo) SetLastLoginTime(v JSONTime) {
	o.LastLoginTime = &v
}

// GetPersonalMessageAllowed returns the PersonalMessageAllowed field value if set, zero value otherwise.
func (o *BTUserInfo) GetPersonalMessageAllowed() bool {
	if o == nil || o.PersonalMessageAllowed == nil {
		var ret bool
		return ret
	}
	return *o.PersonalMessageAllowed
}

// GetPersonalMessageAllowedOk returns a tuple with the PersonalMessageAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetPersonalMessageAllowedOk() (*bool, bool) {
	if o == nil || o.PersonalMessageAllowed == nil {
		return nil, false
	}
	return o.PersonalMessageAllowed, true
}

// HasPersonalMessageAllowed returns a boolean if a field has been set.
func (o *BTUserInfo) HasPersonalMessageAllowed() bool {
	if o != nil && o.PersonalMessageAllowed != nil {
		return true
	}

	return false
}

// SetPersonalMessageAllowed gets a reference to the given bool and assigns it to the PersonalMessageAllowed field.
func (o *BTUserInfo) SetPersonalMessageAllowed(v bool) {
	o.PersonalMessageAllowed = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *BTUserInfo) GetSource() int32 {
	if o == nil || o.Source == nil {
		var ret int32
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetSourceOk() (*int32, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *BTUserInfo) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given int32 and assigns it to the Source field.
func (o *BTUserInfo) SetSource(v int32) {
	o.Source = &v
}

// GetActivePlan returns the ActivePlan field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePlan() BTBillingPlanInfo {
	if o == nil || o.ActivePlan == nil {
		var ret BTBillingPlanInfo
		return ret
	}
	return *o.ActivePlan
}

// GetActivePlanOk returns a tuple with the ActivePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePlanOk() (*BTBillingPlanInfo, bool) {
	if o == nil || o.ActivePlan == nil {
		return nil, false
	}
	return o.ActivePlan, true
}

// HasActivePlan returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePlan() bool {
	if o != nil && o.ActivePlan != nil {
		return true
	}

	return false
}

// SetActivePlan gets a reference to the given BTBillingPlanInfo and assigns it to the ActivePlan field.
func (o *BTUserInfo) SetActivePlan(v BTBillingPlanInfo) {
	o.ActivePlan = &v
}

// GetActivePlanId returns the ActivePlanId field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePlanId() string {
	if o == nil || o.ActivePlanId == nil {
		var ret string
		return ret
	}
	return *o.ActivePlanId
}

// GetActivePlanIdOk returns a tuple with the ActivePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePlanIdOk() (*string, bool) {
	if o == nil || o.ActivePlanId == nil {
		return nil, false
	}
	return o.ActivePlanId, true
}

// HasActivePlanId returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePlanId() bool {
	if o != nil && o.ActivePlanId != nil {
		return true
	}

	return false
}

// SetActivePlanId gets a reference to the given string and assigns it to the ActivePlanId field.
func (o *BTUserInfo) SetActivePlanId(v string) {
	o.ActivePlanId = &v
}

// GetActivePurchases returns the ActivePurchases field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePurchases() []BTPurchaseInfo {
	if o == nil || o.ActivePurchases == nil {
		var ret []BTPurchaseInfo
		return ret
	}
	return o.ActivePurchases
}

// GetActivePurchasesOk returns a tuple with the ActivePurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePurchasesOk() ([]BTPurchaseInfo, bool) {
	if o == nil || o.ActivePurchases == nil {
		return nil, false
	}
	return o.ActivePurchases, true
}

// HasActivePurchases returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePurchases() bool {
	if o != nil && o.ActivePurchases != nil {
		return true
	}

	return false
}

// SetActivePurchases gets a reference to the given []BTPurchaseInfo and assigns it to the ActivePurchases field.
func (o *BTUserInfo) SetActivePurchases(v []BTPurchaseInfo) {
	o.ActivePurchases = v
}

// GetActiveTrialInfo returns the ActiveTrialInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetActiveTrialInfo() BTTrialInfo {
	if o == nil || o.ActiveTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.ActiveTrialInfo
}

// GetActiveTrialInfoOk returns a tuple with the ActiveTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActiveTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.ActiveTrialInfo == nil {
		return nil, false
	}
	return o.ActiveTrialInfo, true
}

// HasActiveTrialInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasActiveTrialInfo() bool {
	if o != nil && o.ActiveTrialInfo != nil {
		return true
	}

	return false
}

// SetActiveTrialInfo gets a reference to the given BTTrialInfo and assigns it to the ActiveTrialInfo field.
func (o *BTUserInfo) SetActiveTrialInfo(v BTTrialInfo) {
	o.ActiveTrialInfo = &v
}

// GetB2cId returns the B2cId field value if set, zero value otherwise.
func (o *BTUserInfo) GetB2cId() string {
	if o == nil || o.B2cId == nil {
		var ret string
		return ret
	}
	return *o.B2cId
}

// GetB2cIdOk returns a tuple with the B2cId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetB2cIdOk() (*string, bool) {
	if o == nil || o.B2cId == nil {
		return nil, false
	}
	return o.B2cId, true
}

// HasB2cId returns a boolean if a field has been set.
func (o *BTUserInfo) HasB2cId() bool {
	if o != nil && o.B2cId != nil {
		return true
	}

	return false
}

// SetB2cId gets a reference to the given string and assigns it to the B2cId field.
func (o *BTUserInfo) SetB2cId(v string) {
	o.B2cId = &v
}

// GetBillingUpdateRequired returns the BillingUpdateRequired field value if set, zero value otherwise.
func (o *BTUserInfo) GetBillingUpdateRequired() bool {
	if o == nil || o.BillingUpdateRequired == nil {
		var ret bool
		return ret
	}
	return *o.BillingUpdateRequired
}

// GetBillingUpdateRequiredOk returns a tuple with the BillingUpdateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetBillingUpdateRequiredOk() (*bool, bool) {
	if o == nil || o.BillingUpdateRequired == nil {
		return nil, false
	}
	return o.BillingUpdateRequired, true
}

// HasBillingUpdateRequired returns a boolean if a field has been set.
func (o *BTUserInfo) HasBillingUpdateRequired() bool {
	if o != nil && o.BillingUpdateRequired != nil {
		return true
	}

	return false
}

// SetBillingUpdateRequired gets a reference to the given bool and assigns it to the BillingUpdateRequired field.
func (o *BTUserInfo) SetBillingUpdateRequired(v bool) {
	o.BillingUpdateRequired = &v
}

// GetCadSystemAtSignup returns the CadSystemAtSignup field value if set, zero value otherwise.
func (o *BTUserInfo) GetCadSystemAtSignup() string {
	if o == nil || o.CadSystemAtSignup == nil {
		var ret string
		return ret
	}
	return *o.CadSystemAtSignup
}

// GetCadSystemAtSignupOk returns a tuple with the CadSystemAtSignup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCadSystemAtSignupOk() (*string, bool) {
	if o == nil || o.CadSystemAtSignup == nil {
		return nil, false
	}
	return o.CadSystemAtSignup, true
}

// HasCadSystemAtSignup returns a boolean if a field has been set.
func (o *BTUserInfo) HasCadSystemAtSignup() bool {
	if o != nil && o.CadSystemAtSignup != nil {
		return true
	}

	return false
}

// SetCadSystemAtSignup gets a reference to the given string and assigns it to the CadSystemAtSignup field.
func (o *BTUserInfo) SetCadSystemAtSignup(v string) {
	o.CadSystemAtSignup = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *BTUserInfo) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *BTUserInfo) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *BTUserInfo) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTUserInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTUserInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTUserInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *BTUserInfo) GetCredential() BTSessionCredentialInfo {
	if o == nil || o.Credential == nil {
		var ret BTSessionCredentialInfo
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCredentialOk() (*BTSessionCredentialInfo, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *BTUserInfo) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given BTSessionCredentialInfo and assigns it to the Credential field.
func (o *BTUserInfo) SetCredential(v BTSessionCredentialInfo) {
	o.Credential = &v
}

// GetDefaultCompanyName returns the DefaultCompanyName field value if set, zero value otherwise.
func (o *BTUserInfo) GetDefaultCompanyName() string {
	if o == nil || o.DefaultCompanyName == nil {
		var ret string
		return ret
	}
	return *o.DefaultCompanyName
}

// GetDefaultCompanyNameOk returns a tuple with the DefaultCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDefaultCompanyNameOk() (*string, bool) {
	if o == nil || o.DefaultCompanyName == nil {
		return nil, false
	}
	return o.DefaultCompanyName, true
}

// HasDefaultCompanyName returns a boolean if a field has been set.
func (o *BTUserInfo) HasDefaultCompanyName() bool {
	if o != nil && o.DefaultCompanyName != nil {
		return true
	}

	return false
}

// SetDefaultCompanyName gets a reference to the given string and assigns it to the DefaultCompanyName field.
func (o *BTUserInfo) SetDefaultCompanyName(v string) {
	o.DefaultCompanyName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTUserInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTUserInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTUserInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetDeviceInfo() BTDeviceLoginSecretInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret BTDeviceLoginSecretInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDeviceInfoOk() (*BTDeviceLoginSecretInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given BTDeviceLoginSecretInfo and assigns it to the DeviceInfo field.
func (o *BTUserInfo) SetDeviceInfo(v BTDeviceLoginSecretInfo) {
	o.DeviceInfo = &v
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *BTUserInfo) GetEnterprise() bool {
	if o == nil || o.Enterprise == nil {
		var ret bool
		return ret
	}
	return *o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEnterpriseOk() (*bool, bool) {
	if o == nil || o.Enterprise == nil {
		return nil, false
	}
	return o.Enterprise, true
}

// HasEnterprise returns a boolean if a field has been set.
func (o *BTUserInfo) HasEnterprise() bool {
	if o != nil && o.Enterprise != nil {
		return true
	}

	return false
}

// SetEnterprise gets a reference to the given bool and assigns it to the Enterprise field.
func (o *BTUserInfo) SetEnterprise(v bool) {
	o.Enterprise = &v
}

// GetEulaId returns the EulaId field value if set, zero value otherwise.
func (o *BTUserInfo) GetEulaId() string {
	if o == nil || o.EulaId == nil {
		var ret string
		return ret
	}
	return *o.EulaId
}

// GetEulaIdOk returns a tuple with the EulaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEulaIdOk() (*string, bool) {
	if o == nil || o.EulaId == nil {
		return nil, false
	}
	return o.EulaId, true
}

// HasEulaId returns a boolean if a field has been set.
func (o *BTUserInfo) HasEulaId() bool {
	if o != nil && o.EulaId != nil {
		return true
	}

	return false
}

// SetEulaId gets a reference to the given string and assigns it to the EulaId field.
func (o *BTUserInfo) SetEulaId(v string) {
	o.EulaId = &v
}

// GetEulaRequired returns the EulaRequired field value if set, zero value otherwise.
func (o *BTUserInfo) GetEulaRequired() bool {
	if o == nil || o.EulaRequired == nil {
		var ret bool
		return ret
	}
	return *o.EulaRequired
}

// GetEulaRequiredOk returns a tuple with the EulaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEulaRequiredOk() (*bool, bool) {
	if o == nil || o.EulaRequired == nil {
		return nil, false
	}
	return o.EulaRequired, true
}

// HasEulaRequired returns a boolean if a field has been set.
func (o *BTUserInfo) HasEulaRequired() bool {
	if o != nil && o.EulaRequired != nil {
		return true
	}

	return false
}

// SetEulaRequired gets a reference to the given bool and assigns it to the EulaRequired field.
func (o *BTUserInfo) SetEulaRequired(v bool) {
	o.EulaRequired = &v
}

// GetEvalCenter returns the EvalCenter field value if set, zero value otherwise.
func (o *BTUserInfo) GetEvalCenter() bool {
	if o == nil || o.EvalCenter == nil {
		var ret bool
		return ret
	}
	return *o.EvalCenter
}

// GetEvalCenterOk returns a tuple with the EvalCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEvalCenterOk() (*bool, bool) {
	if o == nil || o.EvalCenter == nil {
		return nil, false
	}
	return o.EvalCenter, true
}

// HasEvalCenter returns a boolean if a field has been set.
func (o *BTUserInfo) HasEvalCenter() bool {
	if o != nil && o.EvalCenter != nil {
		return true
	}

	return false
}

// SetEvalCenter gets a reference to the given bool and assigns it to the EvalCenter field.
func (o *BTUserInfo) SetEvalCenter(v bool) {
	o.EvalCenter = &v
}

// GetForumId returns the ForumId field value if set, zero value otherwise.
func (o *BTUserInfo) GetForumId() string {
	if o == nil || o.ForumId == nil {
		var ret string
		return ret
	}
	return *o.ForumId
}

// GetForumIdOk returns a tuple with the ForumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetForumIdOk() (*string, bool) {
	if o == nil || o.ForumId == nil {
		return nil, false
	}
	return o.ForumId, true
}

// HasForumId returns a boolean if a field has been set.
func (o *BTUserInfo) HasForumId() bool {
	if o != nil && o.ForumId != nil {
		return true
	}

	return false
}

// SetForumId gets a reference to the given string and assigns it to the ForumId field.
func (o *BTUserInfo) SetForumId(v string) {
	o.ForumId = &v
}

// GetLastTrialInfo returns the LastTrialInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastTrialInfo() BTTrialInfo {
	if o == nil || o.LastTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.LastTrialInfo
}

// GetLastTrialInfoOk returns a tuple with the LastTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.LastTrialInfo == nil {
		return nil, false
	}
	return o.LastTrialInfo, true
}

// HasLastTrialInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastTrialInfo() bool {
	if o != nil && o.LastTrialInfo != nil {
		return true
	}

	return false
}

// SetLastTrialInfo gets a reference to the given BTTrialInfo and assigns it to the LastTrialInfo field.
func (o *BTUserInfo) SetLastTrialInfo(v BTTrialInfo) {
	o.LastTrialInfo = &v
}

// GetNeedToShowNewWalkthrough returns the NeedToShowNewWalkthrough field value if set, zero value otherwise.
func (o *BTUserInfo) GetNeedToShowNewWalkthrough() bool {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		var ret bool
		return ret
	}
	return *o.NeedToShowNewWalkthrough
}

// GetNeedToShowNewWalkthroughOk returns a tuple with the NeedToShowNewWalkthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetNeedToShowNewWalkthroughOk() (*bool, bool) {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		return nil, false
	}
	return o.NeedToShowNewWalkthrough, true
}

// HasNeedToShowNewWalkthrough returns a boolean if a field has been set.
func (o *BTUserInfo) HasNeedToShowNewWalkthrough() bool {
	if o != nil && o.NeedToShowNewWalkthrough != nil {
		return true
	}

	return false
}

// SetNeedToShowNewWalkthrough gets a reference to the given bool and assigns it to the NeedToShowNewWalkthrough field.
func (o *BTUserInfo) SetNeedToShowNewWalkthrough(v bool) {
	o.NeedToShowNewWalkthrough = &v
}

// GetOwnPurchase returns the OwnPurchase field value if set, zero value otherwise.
func (o *BTUserInfo) GetOwnPurchase() BTPurchaseInfo {
	if o == nil || o.OwnPurchase == nil {
		var ret BTPurchaseInfo
		return ret
	}
	return *o.OwnPurchase
}

// GetOwnPurchaseOk returns a tuple with the OwnPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetOwnPurchaseOk() (*BTPurchaseInfo, bool) {
	if o == nil || o.OwnPurchase == nil {
		return nil, false
	}
	return o.OwnPurchase, true
}

// HasOwnPurchase returns a boolean if a field has been set.
func (o *BTUserInfo) HasOwnPurchase() bool {
	if o != nil && o.OwnPurchase != nil {
		return true
	}

	return false
}

// SetOwnPurchase gets a reference to the given BTPurchaseInfo and assigns it to the OwnPurchase field.
func (o *BTUserInfo) SetOwnPurchase(v BTPurchaseInfo) {
	o.OwnPurchase = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *BTUserInfo) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *BTUserInfo) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *BTUserInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *BTUserInfo) GetProductType() []string {
	if o == nil || o.ProductType == nil {
		var ret []string
		return ret
	}
	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetProductTypeOk() ([]string, bool) {
	if o == nil || o.ProductType == nil {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *BTUserInfo) HasProductType() bool {
	if o != nil && o.ProductType != nil {
		return true
	}

	return false
}

// SetProductType gets a reference to the given []string and assigns it to the ProductType field.
func (o *BTUserInfo) SetProductType(v []string) {
	o.ProductType = v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *BTUserInfo) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *BTUserInfo) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *BTUserInfo) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *BTUserInfo) GetRole() int32 {
	if o == nil || o.Role == nil {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRoleOk() (*int32, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *BTUserInfo) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *BTUserInfo) SetRole(v int32) {
	o.Role = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *BTUserInfo) GetRoles() []BTRole {
	if o == nil || o.Roles == nil {
		var ret []BTRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRolesOk() ([]BTRole, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *BTUserInfo) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []BTRole and assigns it to the Roles field.
func (o *BTUserInfo) SetRoles(v []BTRole) {
	o.Roles = v
}

// GetStartupPage returns the StartupPage field value if set, zero value otherwise.
func (o *BTUserInfo) GetStartupPage() int32 {
	if o == nil || o.StartupPage == nil {
		var ret int32
		return ret
	}
	return *o.StartupPage
}

// GetStartupPageOk returns a tuple with the StartupPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetStartupPageOk() (*int32, bool) {
	if o == nil || o.StartupPage == nil {
		return nil, false
	}
	return o.StartupPage, true
}

// HasStartupPage returns a boolean if a field has been set.
func (o *BTUserInfo) HasStartupPage() bool {
	if o != nil && o.StartupPage != nil {
		return true
	}

	return false
}

// SetStartupPage gets a reference to the given int32 and assigns it to the StartupPage field.
func (o *BTUserInfo) SetStartupPage(v int32) {
	o.StartupPage = &v
}

// GetSystemUser returns the SystemUser field value if set, zero value otherwise.
func (o *BTUserInfo) GetSystemUser() bool {
	if o == nil || o.SystemUser == nil {
		var ret bool
		return ret
	}
	return *o.SystemUser
}

// GetSystemUserOk returns a tuple with the SystemUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetSystemUserOk() (*bool, bool) {
	if o == nil || o.SystemUser == nil {
		return nil, false
	}
	return o.SystemUser, true
}

// HasSystemUser returns a boolean if a field has been set.
func (o *BTUserInfo) HasSystemUser() bool {
	if o != nil && o.SystemUser != nil {
		return true
	}

	return false
}

// SetSystemUser gets a reference to the given bool and assigns it to the SystemUser field.
func (o *BTUserInfo) SetSystemUser(v bool) {
	o.SystemUser = &v
}

// GetTotpEnabled returns the TotpEnabled field value if set, zero value otherwise.
func (o *BTUserInfo) GetTotpEnabled() bool {
	if o == nil || o.TotpEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TotpEnabled
}

// GetTotpEnabledOk returns a tuple with the TotpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTotpEnabledOk() (*bool, bool) {
	if o == nil || o.TotpEnabled == nil {
		return nil, false
	}
	return o.TotpEnabled, true
}

// HasTotpEnabled returns a boolean if a field has been set.
func (o *BTUserInfo) HasTotpEnabled() bool {
	if o != nil && o.TotpEnabled != nil {
		return true
	}

	return false
}

// SetTotpEnabled gets a reference to the given bool and assigns it to the TotpEnabled field.
func (o *BTUserInfo) SetTotpEnabled(v bool) {
	o.TotpEnabled = &v
}

// GetTracingEnabled returns the TracingEnabled field value if set, zero value otherwise.
func (o *BTUserInfo) GetTracingEnabled() bool {
	if o == nil || o.TracingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TracingEnabled
}

// GetTracingEnabledOk returns a tuple with the TracingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTracingEnabledOk() (*bool, bool) {
	if o == nil || o.TracingEnabled == nil {
		return nil, false
	}
	return o.TracingEnabled, true
}

// HasTracingEnabled returns a boolean if a field has been set.
func (o *BTUserInfo) HasTracingEnabled() bool {
	if o != nil && o.TracingEnabled != nil {
		return true
	}

	return false
}

// SetTracingEnabled gets a reference to the given bool and assigns it to the TracingEnabled field.
func (o *BTUserInfo) SetTracingEnabled(v bool) {
	o.TracingEnabled = &v
}

// GetTrialInfos returns the TrialInfos field value if set, zero value otherwise.
func (o *BTUserInfo) GetTrialInfos() []BTTrialInfo {
	if o == nil || o.TrialInfos == nil {
		var ret []BTTrialInfo
		return ret
	}
	return o.TrialInfos
}

// GetTrialInfosOk returns a tuple with the TrialInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTrialInfosOk() ([]BTTrialInfo, bool) {
	if o == nil || o.TrialInfos == nil {
		return nil, false
	}
	return o.TrialInfos, true
}

// HasTrialInfos returns a boolean if a field has been set.
func (o *BTUserInfo) HasTrialInfos() bool {
	if o != nil && o.TrialInfos != nil {
		return true
	}

	return false
}

// SetTrialInfos gets a reference to the given []BTTrialInfo and assigns it to the TrialInfos field.
func (o *BTUserInfo) SetTrialInfos(v []BTTrialInfo) {
	o.TrialInfos = v
}

func (o BTUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.DocumentationName != nil {
		toSerialize["documentationName"] = o.DocumentationName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.DocumentationNameOverride != nil {
		toSerialize["documentationNameOverride"] = o.DocumentationNameOverride
	}
	if o.GlobalPermissions != nil {
		toSerialize["globalPermissions"] = o.GlobalPermissions
	}
	if o.IsGuest != nil {
		toSerialize["isGuest"] = o.IsGuest
	}
	if o.IsLight != nil {
		toSerialize["isLight"] = o.IsLight
	}
	if o.LastLoginTime != nil {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if o.PersonalMessageAllowed != nil {
		toSerialize["personalMessageAllowed"] = o.PersonalMessageAllowed
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.ActivePlan != nil {
		toSerialize["activePlan"] = o.ActivePlan
	}
	if o.ActivePlanId != nil {
		toSerialize["activePlanId"] = o.ActivePlanId
	}
	if o.ActivePurchases != nil {
		toSerialize["activePurchases"] = o.ActivePurchases
	}
	if o.ActiveTrialInfo != nil {
		toSerialize["activeTrialInfo"] = o.ActiveTrialInfo
	}
	if o.B2cId != nil {
		toSerialize["b2cId"] = o.B2cId
	}
	if o.BillingUpdateRequired != nil {
		toSerialize["billingUpdateRequired"] = o.BillingUpdateRequired
	}
	if o.CadSystemAtSignup != nil {
		toSerialize["cadSystemAtSignup"] = o.CadSystemAtSignup
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.DefaultCompanyName != nil {
		toSerialize["defaultCompanyName"] = o.DefaultCompanyName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.Enterprise != nil {
		toSerialize["enterprise"] = o.Enterprise
	}
	if o.EulaId != nil {
		toSerialize["eulaId"] = o.EulaId
	}
	if o.EulaRequired != nil {
		toSerialize["eulaRequired"] = o.EulaRequired
	}
	if o.EvalCenter != nil {
		toSerialize["evalCenter"] = o.EvalCenter
	}
	if o.ForumId != nil {
		toSerialize["forumId"] = o.ForumId
	}
	if o.LastTrialInfo != nil {
		toSerialize["lastTrialInfo"] = o.LastTrialInfo
	}
	if o.NeedToShowNewWalkthrough != nil {
		toSerialize["needToShowNewWalkthrough"] = o.NeedToShowNewWalkthrough
	}
	if o.OwnPurchase != nil {
		toSerialize["ownPurchase"] = o.OwnPurchase
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.ProductType != nil {
		toSerialize["productType"] = o.ProductType
	}
	if o.RedirectUrl != nil {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.StartupPage != nil {
		toSerialize["startupPage"] = o.StartupPage
	}
	if o.SystemUser != nil {
		toSerialize["systemUser"] = o.SystemUser
	}
	if o.TotpEnabled != nil {
		toSerialize["totpEnabled"] = o.TotpEnabled
	}
	if o.TracingEnabled != nil {
		toSerialize["tracingEnabled"] = o.TracingEnabled
	}
	if o.TrialInfos != nil {
		toSerialize["trialInfos"] = o.TrialInfos
	}
	return json.Marshal(toSerialize)
}

type NullableBTUserInfo struct {
	value *BTUserInfo
	isSet bool
}

func (v NullableBTUserInfo) Get() *BTUserInfo {
	return v.value
}

func (v *NullableBTUserInfo) Set(val *BTUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTUserInfo(val *BTUserInfo) *NullableBTUserInfo {
	return &NullableBTUserInfo{value: val, isSet: true}
}

func (v NullableBTUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
